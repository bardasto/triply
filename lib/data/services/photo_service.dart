import 'dart:convert';
import 'package:http/http.dart' as http;
import 'google_places_service.dart';

class PhotoService {
  // üéØ –¢–û–õ–¨–ö–û –†–ï–ê–õ–¨–ù–´–ï –§–û–¢–û - –Ω–∏–∫–∞–∫–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã—Ö fallback!

  // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –†–ï–ê–õ–¨–ù–û–ï —Ñ–æ—Ç–æ –æ—Ç–µ–ª—è —á–µ—Ä–µ–∑ Google Places API
  static Future<String?> getRealHotelPhoto(
      String hotelName, String cityName, String hotelId) async {
    try {
      print('üì∏ Getting real photo for: $hotelName in $cityName');

      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Google Places
      final realPhotos = await GooglePlacesService.getHotelPhotosByName(
          hotelName, cityName,
          maxPhotos: 1);

      if (realPhotos.isNotEmpty) {
        final photoUrl = realPhotos.first;
        print('‚úÖ Got real photo for $hotelName');
        return photoUrl;
      }

      print('‚ùå No real photo found for $hotelName');
      return null;
    } catch (e) {
      print('‚ùå Error getting real photo for $hotelName: $e');
      return null;
    }
  }

  // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –†–ï–ê–õ–¨–ù–´–• —Ñ–æ—Ç–æ –æ—Ç–µ–ª—è
  static Future<List<String>> getRealHotelPhotos(
      String hotelName, String cityName, String hotelId,
      {int count = 3}) async {
    try {
      print('üì∏ Getting $count real photos for: $hotelName in $cityName');

      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Google Places
      final realPhotos = await GooglePlacesService.getHotelPhotosByName(
          hotelName, cityName,
          maxPhotos: count);

      if (realPhotos.isNotEmpty) {
        print('‚úÖ Got ${realPhotos.length} real photos for $hotelName');
        return realPhotos;
      }

      print('‚ùå No real photos found for $hotelName');
      return [];
    } catch (e) {
      print('‚ùå Error getting real photos for $hotelName: $e');
      return [];
    }
  }

  // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –æ—Ç–µ–ª—è (–¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
  static double getHotelRating(String hotelId) {
    final hash = hotelId.hashCode.abs();
    final rating = 3.5 + (hash % 16) / 10.0; // –û—Ç 3.5 –¥–æ 5.0
    return double.parse(rating.toStringAsFixed(1));
  }

  // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Google Places API
  static bool get isGooglePlacesConfigured {
    return GooglePlacesService.isConfigured;
  }
}
